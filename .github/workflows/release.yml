jobs:
  release:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: zulu
        java-version: 11
    - continue-on-error: true
      id: version
      name: Set release version
      run: "RELEASE_VERSION=${{ github.event.inputs.version }}\nNEXT_VERSION=${{ github.event.inputs.next\
        \ }}\nPLAIN_VERSION=`echo ${RELEASE_VERSION} | awk 'match($0, /^(0|[1-9][0-9]*)\\\
        .(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)/) { print substr($0, RSTART, RLENGTH);\
        \ }'`\nCOMPUTED_NEXT_VERSION=\"${PLAIN_VERSION}-SNAPSHOT\"\nif [ -z $NEXT_VERSION\
        \ ]\nthen\n  NEXT_VERSION=$COMPUTED_NEXT_VERSION\nfi\n./mvnw -ntp -B versions:set\
        \ versions:commit -DnewVersion=$RELEASE_VERSION -pl :mapstruct-parent -DgenerateBackupPoms=false\n\
        git config --global user.email \"41898282+github-actions[bot]@users.noreply.github.com\"\
        \ngit config --global user.name \"GitHub Action\"\ngit commit -a -m \"Releasing\
        \ version $RELEASE_VERSION\"\ngit push\necho \"RELEASE_VERSION=$RELEASE_VERSION\"\
        \ >> $GITHUB_ENV\necho \"NEXT_VERSION=$NEXT_VERSION\" >> $GITHUB_ENV\necho\
        \ \"PLAIN_VERSION=$PLAIN_VERSION\" >> $GITHUB_ENV\n"
    - continue-on-error: true
      name: Stage
      run: "export GPG_TTY=$(tty)\n./mvnw -ntp -B --file pom.xml \\\n  -Dmaven.site.skip=true\
        \ -Drelease=true -Ppublication,stage\n"
    - continue-on-error: true
      env:
        JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        JRELEASER_NEXUS2_MAVEN_CENTRAL_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        JRELEASER_NEXUS2_MAVEN_CENTRAL_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      name: Release
      run: './mvnw -ntp -B --file pom.xml -pl :mapstruct-parent -Pjreleaser jreleaser:release

        '
    - continue-on-error: true
      if: always()
      name: JReleaser output
      uses: actions/upload-artifact@v4
      with:
        name: jreleaser-release
        path: 'parent/target/jreleaser/trace.log

          parent/target/jreleaser/output.properties

          '
    - continue-on-error: true
      name: Set next version
      run: './mvnw -ntp -B versions:set versions:commit -DnewVersion=${{ env.NEXT_VERSION
        }} -pl :mapstruct-parent -DgenerateBackupPoms=false

        sed -i -e "s@project.build.outputTimestamp>.*</project.build.outputTimestamp@project.build.outputTimestamp>\${git.commit.author.time}</project.build.outputTimestamp@g"
        parent/pom.xml

        git config --global user.email "${{ vars.GH_BOT_EMAIL }}"

        git config --global user.name "GitHub Action"

        git commit -a -m "Next version ${{ env.NEXT_VERSION }}"

        git push

        '
  update-website:
    name: Update Website
    needs:
    - release
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: main
        repository: mapstruct/mapstruct.org
        token: ${{ secrets.GIT_WEBSITE_ACCESS_TOKEN }}
    - continue-on-error: true
      env:
        VERSION: ${{ github.event.inputs.version }}
      name: Download assets
      run: 'curl -sL https://raw.githubusercontent.com/mapstruct/mapstruct/main/.github/scripts/update-website.sh
        --output update-website.sh --create-dirs --output-dir tmp

        curl -sL "https://github.com/mapstruct/mapstruct/releases/download/${VERSION}/mapstruct-${VERSION}-dist.tar.gz"
        --output mapstruct-${VERSION}-dist.tar.gz --create-dirs --output-dir tmp

        '
      shell: bash
    - continue-on-error: true
      env:
        GH_BOT_EMAIL: ${{ vars.GH_BOT_EMAIL }}
        VERSION: ${{ github.event.inputs.version }}
      name: Commit
      run: 'chmod +x tmp/update-website.sh

        tmp/update-website.sh

        '
      shell: bash
name: Release
on:
  repository_dispatch:
    types: trigger-ga___release.yml
